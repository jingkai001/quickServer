<template>
    <div class="container">
        <div class="nav_title">
            <text class="nav_title_detail">{{componentName}}</text>
        </div>
        <!--text-->
        <div class="input-item">
            <text class="input-hint">input type="text"</text>
            <input class="input-text" type="text" placeholder="请输入text" onchange="showChangePrompt"></input>
        </div>
        <!--email-->
        <div class="input-item">
            <text class="input-hint">input type="email"</text>
            <input class="input-text" type="email" placeholder="请输入email" onchange="showChangePrompt">
        </div>
        <!--date-->
        <div class="input-item">
            <text class="input-hint">input type="date"</text>
            <input class="input-text" type="date" placeholder="请输入date" onchange="showChangePrompt">
        </div>
        <!--time-->
        <div class="input-item">
            <text class="input-hint">input type="time"</text>
            <input class="input-text" type="time" placeholder="请输入time" onchange="showChangePrompt">
        </div>
        <!--number-->
        <div class="input-item">
            <text class="input-hint">input type="number"</text>
            <input class="input-text" type="number" placeholder="请输入number" onchange="showChangePrompt">
        </div>
        <!--password-->
        <div class="input-item">
            <text class="input-hint">input type="password"</text>
            <input class="input-text" type="password" placeholder="请输入password" onchange="showChangePrompt">
        </div>
        <!--radio-->
        <div class="input-item">
            <text class="input-hint">input type="radio"</text>
            <div class="doc-row">
                <label target="radio1">label1:</label>
                <input id="radio1" class="flex-grow" type="radio" name="radio" value="radio1" onchange="showChangePrompt">
                <label target="radio2">label1:</label>
                <input id="radio2" class="flex-grow" type="radio" name="radio" value="radio2" onchange="showChangePrompt" checked="true">
                <label target="radio3">label1:</label>
                <input id="radio3" class="flex-grow" type="radio" name="radio" value="radio3" onchange="showChangePrompt">
            </div>
        </div>
        <!--checkbox-->
        <div class="input-item">
            <text class="input-hint">input type="checkbox"</text>
            <div class="doc-row">
                <label target="checkbox1">label1:</label>
                <input id="checkbox1" class="flex-grow" type="checkbox" name="checkbox" value="checkbox1" onchange="showChangePrompt">
                <label target="checkbox2">label1:</label>
                <input id="checkbox2" class="flex-grow" type="checkbox" name="checkbox" value="checkbox1" onchange="showChangePrompt" checked="true">
                <label target="checkbox3">label1:</label>
                <input id="checkbox3" class="flex-grow" type="checkbox" name="checkbox" value="checkbox1" onchange="showChangePrompt">
            </div>
        </div>
        <!--button-->
        <div class="input-item">
            <text class="input-hint">input type="button"</text>
            <div class="doc-row">
                <input class="input-button input-button-first color-1" type="button" value="确认" onclick="showClickPrompt('确认')">
                <input class="input-button color-2" type="button" value="取消" onclick="showClickPrompt('取消')">
                <input class="input-button color-3" type="button" value="提交" onclick="showClickPrompt('提交')">
            </div>
        </div>

        <!--设置或清空输入框的值-->
        <div class="input-item">
            <text class="input-hint">设置或清空输入框的值</text>
            <input class="input-text" type="text" placeholder="必须在change事件中同步value才能改变value" value="{{inputValue}}" onchange="updateValue">
            <div class="doc-row" style="margin-top: 30px;">
                <input class="input-button input-button-first color-3" type="button" value="设置value值" onclick="setValue">
                <input class="input-button color-3" type="button" value="清空value值" onclick="resetValue">
            </div>
        </div>
        <!--控制占位符颜色的input-->
        <div class="input-item">
            <text class="input-hint">控制占位符颜色的input</text>
            <input class="input-text" type="text" placeholder="占位符字体是红色的" placeholder-color="#FF0000">
        </div>

        <div class="input-item">
            <text class="input-hint">获取用户信息</text>
            <input type="button" value="获取" onclick="getAccountInfo">
        </div>

        <div class="input-item">
            <text class="input-hint">调用登录小米账号页面</text>
            <input type="button" value="登录接口" onclick="addAccountInfo">
        </div>
    </div>
</template>

<style>
    @import '../Common/css/common.css';

    .input-item{
        margin-bottom: 80px;
        flex-direction:column;
    }
    .input-hint{
        margin:0 30px 30px;
    }
    .doc-row{
        margin:0 30px;
        justify-content:center;
    }
    .flex-grow{
        flex-grow: 1;
    }
    .input-text{
        height: 80px;
        line-height: 80px;
        padding:0 30px;
        margin:0 30px;
        border-top-width: 1px;
        border-bottom-width: 1px;
        border-color: #999999;
        font-size: 30px;
        background-color: #ffffff;
    }
    .input-text:focus{
        border-color: #f76160;
    }
    .input-button{
        flex: 1;
        padding:10px 30px;
        margin-left: 30px;
        font-size: 30px;
        color: #ffffff;
    }
    .input-button-first{
        margin-left: 0px;
    }

    .color-1 {
        background-color: #09ba07;
    }

    .color-2 {
        background-color: #f76160;
    }

    .color-3 {
        background-color: #0faeff;
    }
</style>

<script>
    import prompt from '@system.prompt';
    import account from '@service.internal.account'

    export default {
        data:{
            componentName:'input',
            inputValue:''
        },

        showChangePrompt(e){
            prompt.showToast({
                message:(e.name === undefined ? '' : '---name: ' + e.name)
                + (e.value === undefined ? '' : '---value: ' + e.value)
                + (e.checked === undefined ? '' : '---checked: '+ e.checked)
                + (e.text === undefined ? '' : '---text: ' + e.text)
            })
        },

        updateValue(e){
            this.inputValue = e.text;
        },
        setValue(){
            this.inputValue = '欢迎使用直达服务';
        },
        resetValue(){
            this.inputValue = '';
        },

        showClickPrompt(msg){
            prompt.showToast({
                message:msg
            })
        },


        getAccountInfo(){
            console.log(JSON.stringify(account.getAccount()));
        },

        addAccountInfo(){
            account.addAccount({
                success:function (res) {
                    prompt.showToast({
                        message:res.userId,
                    })
                },
                fail:function (e) {
                    console.log(e)
                }
            })
        }
    }
</script>